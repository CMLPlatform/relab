# docker-compose.yml (BASE - common configuration)
services:
  backend:
    build:
      context: ./backend
    depends_on:
      database:
        condition: service_healthy
    env_file: ./backend/.env
    environment:
      DATABASE_HOST: database # Point to the database service
    restart: unless-stopped
    volumes:
      - user_uploads:/opt/relab/backend/data/uploads
      - backend_logs:/opt/relab/backend/logs

  backend_migrations:
    build:
      context: ./backend
      dockerfile: Dockerfile.migrations
    depends_on:
      database:
        condition: service_healthy
    env_file: ./backend/.env
    environment:
      DATABASE_HOST: database
    profiles:
      - migrations
    restart: on-failure:3
    volumes: # Ensure migrations have access to seed data and user uploads (for seeding example images)
      - ./backend/data/seed:/opt/relab/backend/data/seed:ro
      - user_uploads:/opt/relab/backend/data/uploads

  database:
    image: postgres:18@sha256:073e7c8b84e2197f94c8083634640ab37105effe1bc853ca4d5fbece3219b0e8
    env_file: ./backend/.env
    healthcheck:
      test: # Check if the database is ready to accept connections
        ["CMD-SHELL", "pg_isready -h localhost -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    volumes:
      - database_data:/var/lib/postgresql

  docs:
    image: squidfunk/mkdocs-material:9@sha256:00f9276315990b82f5af8c47bb2b71e2c69aef9f02a08f8dffd2515f42310753
    restart: unless-stopped
    volumes:
      - ./docs:/docs

  frontend-app:
    build:
      context: ./frontend-app
    depends_on:
      - backend
    restart: unless-stopped

  frontend-web:
    build:
      context: ./frontend-web
    depends_on:
      - backend
    restart: unless-stopped

volumes:
  backend_logs:
  database_data:
  user_uploads:
